<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>index</title>
<link href="css/base.css" rel="stylesheet">
<link href="css/index.css" rel="stylesheet">
<link href="css/media.css" rel="stylesheet">
<script type="text/javascript" src="js/myfocus-2.0.4.min.js"></script>
<link rel="stylesheet" type="text/css" href="css/zhuye.css" />

<!--[if lt IE 9]>
<script src="js/modernizr.js"></script>
<![endif]-->

<!-- 返回顶部调用 begin -->
<script type="text/javascript" src="js/up/jquery.js"></script>
<script type="text/javascript" src="js/up/js.js"></script>
<script type="text/javascript">
//设置
myFocus.set({
	id:'myFocus',//ID
	pattern:'mF_fancy'//风格
});
</script>  
<!-- 返回顶部调用 end-->
<style>

</style>

</head>
	
<body style="background-color:#eee">

<div class="biaotilan1">
    My Blog 创作中心
</div>
  
<div class="biaotilan4" style="padding-top:30px;">  
   <a href="login.php">登录</a>
</div>    

<div class="bigbox">
    <div class="nav">
    <ul>
   <li><a href="zhuye.php" style="background-color:#cc0000">推荐</a></li>
    <li><a href="unlogin/zuixinwenzhang.php">最新文章</a></li>                      
    <li><a href="unlogin/zixun.html">资讯</a></li>
    <li><a href="unlogin/youxikaifa.php">游戏开发</a></li>
    <li><a href="unlogin/qianduan.php">前端</a></li>
    <li><a href="unlogin/yunwei.php">运维</a></li>
    <li><a href="unlogin/dashuju.php">大数据</a></li>
    <li><a href="unlogin/jisuanjijichu.php">计算机基础</a></li>
    <li><a href="unlogin/qita.php">其他</a></li>
    </ul>
    </div>
    <div class="graybox"></div>

    <div id="section">
        <div id="myFocus"><!--焦点图盒子-->
           <div class="loading"></div>
            <!--载入画面(可删除)-->
            <div class="pic"><!--图片列表-->
              <ul>
                <li><a href="#1"><img src="img/1.jpg" thumb=""/></a></li>
                <li><a href="#2"><img src="img/2.jpg" thumb=""/></a></li>
                <li><a href="#3"><img src="img/3.jpg" thumb=""/></a></li>
                <li><a href="#4"><img src="img/4.jpg" thumb=""/></a></li>
                <li><a href="#5"><img src="img/5.jpg" thumb=""/></a></li>
              </ul>
            </div>
          </div>
        </div>	
        <div class="focustext f_r">
          <section class="ft01">
            <h3><a href="/" target="_blank">超高逼格程序员行为规范！</a></h3>
            <p>一. 开始准备工作</br>二. 从进门开始</br>三. 坐下就不要再动</br> 四. 一定用高端，不管实用不实用</br>五. 最后潇洒地离开</p>
          </section>
          <section class="ft02">
            <h3><a href="/" target="_blank">面试有哪些“邪招”可以提高成功率？</a></h3>
             <p> 这个问题是大错特错的，因为现实情况是：你想要为之工作的雇主、平台、招聘经理越优秀，技巧的作用就越小。事实上，在大多数情况下，他们可能会因为这些技巧，将你踢出，他们知道挑选出真正优秀的人才。</p>
          </section>
        </div>
    
    
        <div class="topnews">
          <b>文章</b>推荐</h2>
          <div class="blogs">
            <figure><img src="images/01.jpg"></figure>
            <ul>
              <h3><a href="/">面试有哪些“邪招”可以提高成功率？</a></h3>
             <p>这个问题是大错特错的，因为现实情况是：你想要为之工作的雇主、平台、招聘经理越优秀，技巧的作用就越小。事实上，在大多数情况下，他们可能会因为这些技巧，将你踢出候选列表。因为最佳雇主马上就能看穿你的技巧，马上会知道你不踏实。他们今天的成功并不是空穴来风，其中一个重要原因就是因为他们拥有丰富经验，知道如何在一堆伪君子之中评估、挑选出真正优秀的人才。</p>
              <p class="autor"><span class="lm f_l"><a href="/">MyBlog</a></span><span class="dtime f_l">2014-02-19</span>
              <span class="pingl f_r">评论（<a href="/">30</a>）</span></p>
            </ul>
          </div>
          <div class="blogs">
            <figure><img src="images/02.jpg"></figure>
            <ul>
              <h3><a href="/">写了100万行代码的程序员？</a></h3>
              <p>今天在社群上闲逛，突然发现一个十分有趣的帖子，《写了100W行的代码是啥感觉?》看完之后就头皮一阵发麻，让我写一万行的代码?!are you kidding me?</br>
			  我估计写到20万的时候就会突然有个疑问—-“咦?我的头发呢?”</br>
			  A同学：我写两千行代码功能都得琢磨个两三天，一百万行真的是好多啊，最多了五年写了也就 20-30万行代码左右，还是有任务在身的情况被逼着写的，让我写一百万行代码，恐怕这辈子得死在电脑前了…</br>
			  B同学：我是觉得如果说你一个工作写了一百万行代码，那你在公司的地位应该算资深员工了。如果你一个项目写了一百万行，那你肯定是参与了一个比较大的项目了。</br>
			  如果你一个类写了一百万行，请问你用的是什么编辑器?如果你一个方法写了一百万行代码的话，请问你有没有被同事打死?</br>
			  C同学：据说要从初学者成长为程序员，那个得需要10万行代码的积累才可以呢。不过话说回来这样说也很对，毕竟入门阶段嘛，确实需要多打代码才能积累经验。</br>
			  不过修炼一段时间之后再注重代码的量那就不对了这时候肯定是注重数学还有算法思维，按这样算的话，假如20万是修炼门槛真积累到了一百万行代码肯定代码质量越来越高了，估计是某个领域的小专家也说不定。</br>
至于真敲了一百万行低质量代码，听哥一句话，还是转行吧。程序员不适合你这种锲而不舍的精神。</br>
D同学：切，一群渣渣。给你们看看一张网图就知道我连续熬夜写几千行代码是什么状态了。我感觉我快要窒息了，如果时间可以倒流，我希望我不做程序员!!!</br>
E同学：这简直就是一个送命题啊，哪有什么人能打一百万的代码，从业五六年的程序员，如果按正常工作量的话一天也就一百多行，这五六年估计也就五六万行吧。</br>
总结一下：</br>
关于代码的量，从初学者成长为程序员，需要代码的积累，而以后数学功底和编程思维的深化更加重要。</br>
一味的追求量并没有任何实际意义，通常，越核心的部分代码量越小，越容易写大量代码的，大概是没什么技术含量的 UI、业务逻辑。而一些部分，用脚本或DSL实现可以更精简。写代码和考试一样，做题最多的不一定是成绩最好的。</br>
此外，要想做高质量的代码，建议先打好技术基础，比如掌握好开发语言，熟悉开发平台、掌握基础的数据结构与算法、了解基础的设计原则等。建议采用代码标准，比如Google等大厂已经制定好了各种标准。想好了再写，不建议边做边想。</br>
我们常常很难一次把代码写得让自己满意、无可挑剔，所以重构对于代码质量的重要性不言而喻，推荐阅读《重构》这本业内经典书籍。</br>
很多问题归根结底都是技术债务，就代码质量而言，如果你还对高质量代码有追求，建议你在负责一个小模块时，除了把它做好之外，也要顺便将与之纠缠在一起的技术债务还掉，在一个团队里任何一个人都不可能独善其身。</br>
写出高质量的代码，代码审查也必不可少。事实上,很多代码上的问题，都可以通过一些工具来找到,比如Android开发中有Lint, Find bugs, PMD等优秀静态检查工具可用，通过改进这些工具找出的问题，就能对语法的细节，规范，编程的技巧有更多直观了解。</br>
建议最好与持续集成(CI)，代码审查环境配套使用，每次提交的代码都能自动验证是否通过了工具的代码检查，通过才允许提交。</br>
当你需要修改大量代码时，单元测试的优点就显现出来，你只尽管放心修改，只需要保证单元测试用例通过即可，无需瞻前顾后。在写完代码后，进行充分自测，需要至少跑一遍基本的场景，一些简单的异常流，不要总想着让测试帮你找问题。</br>
最后就是善用开源。虽然并非开源的东西，质量就高，但至少关注度较高，使用人数较多，口碑较好的开源项目，质量有一定保证，即便存在一些问题，也可以通过提交反馈，不断改进。</br>
最重要的是，你自己花时间造的轮子，需要很多精力维护，而充分利用开源项目，能帮助你节省很多时间，把精力专注在最需要你关心的问题上。</br>
为辛苦的程序员们点个赞，各位程序员们你们有同感吗？欢迎评论吐槽~</br>
				</p>
              <p class="autor"><span class="lm f_l"><a href="/">MyBlog</a></span><span class="dtime f_l">2014-02-19</span>
              <span class="pingl f_r">评论（<a href="/">30</a>）</span></p>
            </ul>
          </div>
          <div class="blogs">
            <figure><img src="images/03.jpg"></figure>
            <ul>
              <h3><a href="/">35岁以后的程序员都没活干了？</a></h3>
              <p>最近很多程序员私聊我，说以后年龄大了怎么办？是不是被大公司无情的抛弃了，前不久看到一个文章说华为公司开始辞退35岁以后的老员工等等，很多程序员开始担忧了...
其实大可不必这样担心，技术在手，并且保持持续性学习的热情，你只会越来越受到别人的追捧与欢迎。
比如，你可以选择管理岗、可以选择创业、也可以选择做一名受人尊重爱戴的牛逼讲师！
好了，长话短说，大家都忙，我也很忙，我就直奔主题！
知道金迅教育的同学都比较清楚，对老师的要求非常严格，也非常狠。当然，这背后肯定是给老师的薪酬与待遇非常高！高到什么程度呢？只要你够牛，起步年薪50万以上，为什么会这样？因为金迅教育很不喜欢给老师画饼，直接给高薪！</p>
              <p class="autor"><span class="lm f_l"><a href="/">MyBlog</a></span><span class="dtime f_l">2014-02-19</span>
              <span class="pingl f_r">评论（<a href="/">30</a>）</span></p>
            </ul>
          </div>
          <div class="blogs">
            <figure><img src="images/04.jpg"></figure>
            <ul>
              <h3><a href="/">没有基础半路学编程，靠谱吗？</a></h3>
              <p>1、如果你没有去做，是不会知道自己能不能成为大牛的。</br>
2、学习是一辈子的事情，哪里来的半路出家？25岁学编程，35岁的时候你就是有10年编程经验的人。</br>
3、在互联网时代，随处可见的秘籍太多，而诚心修炼的人太少，和是不是科班出身没太多关系，有的人4个月培训就干掉人家2年的工作经验。</br>
4、半路出家，能不能成为大牛我不清楚，最好在付出前不要在意结果，难道因为吃鱼有1%的几率卡喉，你就一辈子不吃了？成不了大牛，就不学编程了？如果你的对象一开始不能答应你白头偕老，你就不谈恋爱了？</br>
5、好的问题才有好的答案。</br>
6、你会发现很多大牛，不仅程序写得好，文艺方面照样响当当，而且身材还不错，原因是什么？</br>
共性的地方是：任何事情的任何结果都需要时间的积累，及坚定的信念。如果一开始就对自己没信心，那可不行哦！</br>
不说鸡汤，谈谈现实：半路转行做软件工程师的人，他们的职场现状是怎样的。</br>
1、为什么会要改做程序员？</br>
因为工作原因，在日常生活中，以及在知乎上，有很多人向我咨询职业生涯的抉择。他们大都对自己的职业现状不满意，打算学习编程成为一名程序员。</br>
我问，为什么想要做工程师？</br>
答案五花八门，其中「工资高」「好找工作」「有职业发展」是很常见的理由。</br>
3、如果不是名校科班出身，怎么使自己脱颖而出？</br>
一个有趣的现象：有些去上培训班的学生，其实是正儿八经的四年本科计算机专业毕业生。为何还要去上培训班？因为在四年的大学中，他们并没有掌握应有的能力。</br>
有些自学成才的人，也成了同事眼中的大牛，我举两个例子：</br>
A，中学时对计算机和数学感兴趣，大学学习数学，毕业时放弃了国外数学专业的 offer，进了国内互联网巨头做程序员。在大学期间的 ACM 经历、和同学合伙创业做网站的经历，是他求职互联网公司时 offer 拿到手软的核心竞争力之一。</br>
B，学习任何东西都很快，大学学的工商管理，毕业去某跨国软件巨头做销售，年入几十万。后来突发心血学编程，完全是通过网络资源自学。通过几个有影响力的个人项目，成功应聘开发职位，同样成长很快。
藉由上面两个例子，我想说的是：学编程并不是一件轻松的事。</br>
如果你本来就对此感兴趣，或者学习能力强且有毅力，成为一个高薪的开发并不难。</br>
在能力突出又非科班出身的情况下，可以通过影响力大的个人项目、闪亮的 github 个人页、ACM等来为自己的能力背书。</br>
也可以在程序员聚集的社交网络活跃，得到其他大牛的认同，他们自然愿意帮你内推。</br>
4、半路学编程的前辈们，他们的成功经验</br>
写了江民杀毒的王江民先生，三岁时因患小儿麻痹后遗症而腿部残疾；他初中毕业后，回到老家从一名街道工厂的学徒工干起，最后成为拥有 20 多项创造发明的机械和光电类专家。
38 岁的时候，江民开始学习计算机。几年后，他就成为中国最早的反病毒专家，创立了影响力巨大的江民杀毒。</br>
王江民先生，就是我前面说的那种学习任何东西都很快、又有毅力的人。这样的人，无论做什么事都能成功。</p>
              <p class="autor"><span class="lm f_l"><a href="/">MyBlog</a></span><span class="dtime f_l">2014-02-19</span>
              <span class="pingl f_r">评论（<a href="/">30</a>）</span></p>
            </ul>
          </div>
          <div class="blogs">
            <figure><img src="images/05.jpg"></figure>
            <ul>
              <h3><a href="/">又是一年高考时，热门高薪AI人才了解一下？</a></h3>
              <p>大家好，我是小编七月，欢迎大家来到七月在线实验室。</br>
      遥想上周五小编还在棒棒糖堆里享受着六一儿童节的美好时光，怎么转眼之间就来到了6月4日，一年一度的高考即将拉开序幕，作为一个已经远离高考数余年的只能在六一儿童节装装嫩的过气90后，感到淡淡的忧伤！</br>
      高考是我们人生中的一件大事，每一次的选择可能都会将我们指引向不同的方向，引导到不同的人生上，每一次人生选择的时候，若能跟上时代前进的步伐，或许后续就会走向不同的人生轨迹。</br>
      伴随着互联网的发展，现在已经完全进入移动互联网时代，人工智能、区块链、数字货币等等新词层出不穷。高考之后的你们面对着专业方向的选择，面对着大行业发展的选择。那么，最近一直很火的人工智能（AI）要不要了解一下？</br>
      “人工智能”一词最初是在1956 年Dartmouth学会上提出的。从那以后，研究者们发展了众多理论和原理，人工智能的概念也随之扩展。人工智能（Artificial Intelligence），英文缩写为AI。它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。人工智能是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器，该领域的研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等。人工智能从诞生以来，理论和技术日益成熟，应用领域也不断扩大，可以设想，未来人工智能带来的科技产品，将会是人类智慧的“容器”。</br>
      用来研究人工智能的主要物质基础以及能够实现人工智能技术平台的机器就是计算机，人工智能的发展历史是和计算机科学技术的发展史联系在一起的。除了计算机科学以外，人工智能还涉及信息论、控制论、自动化、仿生学、生物学、心理学、数理逻辑、语言学、医学和哲学等多门学科。人工智能学科研究的主要内容包括：知识表示、自动推理和搜索方法、机器学习和知识获取、知识处理系统、自然语言理解、计算机视觉、智能机器人、自动程序设计等方面。</br>
      首先人工智能的基础还是计算机相关软硬件，应用方面则涉及到各个学科。所以相关的基础学科都得打牢基础才可以。</br>
       AI相关的岗位薪资起点就已经远远超出了其他岗位一大截，这么火的行业、这么火的岗位还是得提前做好准备哦！大家加油，等着你们高考胜利的好消息哦！</br></p>
              <p class="autor"><span class="lm f_l"><a href="/">MyBlog</a></span><span class="dtime f_l">2014-02-19</span>
              <span class="pingl f_r">评论（<a href="/">30</a>）</span></p>
            </ul>
          </div>
          <div class="blogs">
            <figure><img src="images/06.jpg"></figure>
            <ul>
              <h3><a href="/">十个程序员必备的网站</a></h3>
              <p>程序员的工作和日常生活非常的枯燥，这里给大家推荐一些程序员经常使用的网站，也是我经常上的一些网站，尤其是前三个网站感觉用起来非常的舒服。我大致把这些网站分为三类，使用工具类，设计分享类，资讯交流类，业界良心类。希望能对大家有所帮助。</br>
　　1，Github代码托管（https://github.com/）</br>
　　作为开源代码库以及版本控制系统，Github拥有140多万开发者用户。随着越来越多的应用程序转移到了云上，Github已经成为了管理软件开发以及发现已有代码的首选方法。代码托管必备。</br>
　　2，Dribbble设计达人（https://dribbble.com/）</br>
　　Dribbble是一个面向创作家、艺术工作者、设计师等创意类作品的人群，提供作品在线服务，供网友在线查看已经完成的作品或者正在创作的作品的交流网站。对于前端设计来说真是再好不过的一个网站了。</br>
　　3，StackOverFlow技术问答（http://stackoverflow.com/）</br>
　　Stack Overflow是一个与程序相关的IT技术问答网站。用户可以在网站免费提交问题，浏览问题，索引相关内容，在创建主页的时候使用简单的HTML。在问题页面，我们不会弹出任何广告，销售信息，Java 窗口等。</br>
　　4，全球最大中文IT社区（http://www.csdn.net/）</br>
　　中国最大的IT社区和服务平台，为中国的软件开发者和IT从业者提供知识传播、职业发展、软件开发等全生命周期服务，满足他们在职业发展中学习及共享知识和信息、建立职业发展社交圈、通过软件开发实现技术商业化等刚性需求。</br>
　　5，博客园（http://www.cnblogs.com/）</br>
　　这样一个不起眼的地方，却吸引了很多IT技术精英，把这里当作自己的网上家园，每天在这里分享着精彩的原创内容，也许他们看重的不是华丽的外表、诱人的虚名，而是纯净、专注、对技术人员的理解。</br>
　　6，V2EX（http://www.v2ex.com/）</br>
　　无论你是在大学进行人生最重要阶段的学习，或者是在中国的某座城市工作，或者是在外太空的某个天体如 Sputnik 1 上享受人生，在注册进入 V2EX 之后，你都可以为自己设置一个所在地，从而找到更多和你在同一区域的朋友。</br>
　　7，程序员客栈（http://www.proginn.com）</br>
　　我们都知道，未来是互联网科技从业者的，更确切的说是属于程序员、设计师、产品经理的...因此，我们需要一个地方让这些人立体展现自我成就，建立影响力，输出价值，拓展机遇。同时我们帮助企业团队找到行业里最优秀的人才，解决难题。</br>
　　8，码农网（http://www.codeceo.com/）</br>
　　程序员编程资料和编程经验分享平台码农网是一个专注程序员编程资料、编程经验、职场面试分享的博客平台,帮助程序员在编程开发中获取第一手的实用资料</br>
　　9，果壳网（http://www.guokr.com/）</br>
　　作为一个开放、多元的泛科技兴趣社区，吸引了百万名有意思、爱知识、乐于分享的年轻人聚集在这里，用知识创造价值，为生活添加智趣。在这里可以关注感兴趣的人，阅读他们的推荐，也将有意思的内容分享给关注的人；依兴趣关注不同的小组，精准阅读喜欢的内容，并与网友交流；在“果壳问答”里提出困惑你的科技问题，或提供靠谱的答案。</br>
　　10，1024（你懂的）</br>
　　业界良心，你懂的！</br></p>
              <p class="autor"><span class="lm f_l"><a href="/">MyBlog</a></span><span class="dtime f_l">2014-02-19</span>
              <span class="pingl f_r">评论（<a href="/">30</a>）</span></p>
            </ul>
          </div>
          <div class="blogs">
            <figure><img src="images/04.jpg"></figure>
            <ul>
              <h3><a href="/">web测试之界面测试</a></h3>
              <p>所谓界面测试就是指，布局是否合理、整体风格是否一致、各个控件的放置位置是否符合客户使用习惯，此外还要测试界面操作便捷性、导航简单易懂性，页面元素的可用性，界面中文字是否正确，命名是否统一，页面是否美观，文字、图片组合是否完美等。</br>一般情况下我们进行界面测试，直接依据产品原型图以及UI切图/效果图，进行对比验证，确认是否一致。 但是如果碰到公司没有原型图，没有UI效果图怎么破？ 毕竟同是天涯沦落人的情况太多了~~</br>那么我们可以参考市场上同类型的成熟产品来做界面比对，且考虑以下几个方面：</br>1、导航测试</br>2、图形测试</br>3、内容测试</br>4、表格测试</br>5、整体界面测试</br>导航测试</br>导航是指位于页面顶部或者侧边区域的，它起着链接站点或者软件内的各个页面的作用。</br>
1、是否易于导航？导航是否直观？</br>
2、Web系统的主要部分是否可通过主页存取？</br>
3、Web应用系统导航帮助要尽可能地准确。</br>
4、Web系统是否需要站点地图、搜索引擎或其他的导航帮助？</br>
5、页面结构、导航、菜单、连接的风格是否一致</br>
图形测试</br>
图形可以包括图片、动画、边框、颜色、字体、背景、按钮等。</br>
1、要确保图形有明确的用途。比如banner页图片的广告宣传</br>
2、所有页面字的风格、颜色、格式是否一致</br>
3、背景颜色是否与字体颜色和前景颜色相搭配，通常情况下不使用背景</br>
4、图片的大小和质量也是一个很重要的因素，一般采用JPG或GIF压缩</br>
5、需要验证的是文字回绕是否正确。如果说明文字指向右边的图片，应该确保该图片出现在右边。</br>
内容测试</br>
用来检验Web应用系统提供信息的正确性、准确性和相关性。</br>
1、信息的正确性是指信息是可靠的还是误传的。比如学习班学费6600，如果是6800就有误向性</br>
2、信息的准确性是指是否有语法或拼写错误</br>
3、信息的相关性是指是否在当前页面可以找到与当前浏览信息相关的信息列表或入口。</br>
表格测试</br>
表格经常和其他界面元素一起协同使用，主要承载数据的归纳、展示与对比的功能，是列表的一种。</br>
比如12306网站-车票预定界面。</br>
1、界面表格布局、颜色、风格是否统一</br>
2、存在筛选条件、搜索控件，是否列于页面上方</br>
3、对于日期筛选条件，是否单独处理，展示出来</br>
4、对于多个搜索条件的场景，是否采用高级搜索按钮并将其打包收起</br>
5、对于多个搜索条件的场景，是否配置重置按钮，便于一键清空所有搜索条件</br>
6、在数据显示超过多条时(一屏无法完全显示，需要滚动查看时)，且表格中的数据不能直观的展示出数据类型，是否采用固定表头的形式，时刻显示数据类型</br>
7、当字段数量过多，需要横向滚动表格，且需要对比数据时，采用固定属性列字段</br>
8、是否支持排序，上下箭头指示排序，一般上下空心箭头默认，上箭头为升序，下箭头为降序。</br>
整体界面测试</br>
整体界面是指整个Web应用系统的页面结构设计，是给用户的一个整体感。</br>
1、当用户浏览Web应用系统时是否感到舒适（带有主观性）</br>
2、是否凭直觉就知道要找的信息在什么地方？</br>
3、整个Web应用系统的设计风格是否一致？</br>
所谓界面测试就是指，布局是否合理、整体风格是否一致、各个控件的放置位置是否符合客户使用习惯，此外还要测试界面操作便捷性、导航简单易懂性，页面元素的可用性，界面中文字是否正确，命名是否统一，页面是否美观，文字、图片组合是否完美等。</br>
一般情况下我们进行界面测试，直接依据产品原型图以及UI切图/效果图，进行对比验证，确认是否一致。 但是如果碰到公司没有原型图，没有UI效果图怎么破？ 毕竟同是天涯沦落人的情况太多了~~</br>
那么我们可以参考市场上同类型的成熟产品来做界面比对，且考虑以下几个方面：</br>
1、导航测试</br>
2、图形测试</br>
3、内容测试</br>
4、表格测试</br>
5、整体界面测试</br>
导航测试</br>
导航是指位于页面顶部或者侧边区域的，它起着链接站点或者软件内的各个页面的作用。</br>
1、是否易于导航？导航是否直观？</br>
2、Web系统的主要部分是否可通过主页存取？</br>3、Web应用系统导航帮助要尽可能地准确。</br>4、Web系统是否需要站点地图、搜索引擎或其他的导航帮助？</br>5、页面结构、导航、菜单、连接的风格是否一致</br>图形测试</br>图形可以包括图片、动画、边框、颜色、字体、背景、按钮等。</br>1、要确保图形有明确的用途。比如banner页图片的广告宣传</br>2、所有页面字的风格、颜色、格式是否一致</br>3、背景颜色是否与字体颜色和前景颜色相搭配，通常情况下不使用背景</br>4、图片的大小和质量也是一个很重要的因素，一般采用JPG或GIF压缩</br>5、需要验证的是文字回绕是否正确。如果说明文字指向右边的图片，应该确保该图片出现在右边。</br>内容测试</br>用来检验Web应用系统提供信息的正确性、准确性和相关性。</br>1、信息的正确性是指信息是可靠的还是误传的。比如柠檬班全程班学费6600，如果是6800就有误向性</br>2、信息的准确性是指是否有语法或拼写错误</br>3、信息的相关性是指是否在当前页面可以找到与当前浏览信息相关的信息列表或入口。</br>表格测试</br>表格经常和其他界面元素一起协同使用，主要承载数据的归纳、展示与对比的功能，是列表的一种。</br>比如12306网站-车票预定界面。</br>1、界面表格布局、颜色、风格是否统一</br>2、存在筛选条件、搜索控件，是否列于页面上方</br>3、对于日期筛选条件，是否单独处理，展示出来</br>4、对于多个搜索条件的场景，是否采用高级搜索按钮并将其打包收起</br>5、对于多个搜索条件的场景，是否配置重置按钮，便于一键清空所有搜索条件</br>6、在数据显示超过多条时(一屏无法完全显示，需要滚动查看时)，且表格中的数据不能直观的展示出数据类型，是否采用固定表头的形式，时刻显示数据类型</br>7、当字段数量过多，需要横向滚动表格，且需要对比数据时，采用固定属性列字段</br>8、是否支持排序，上下箭头指示排序，一般上下空心箭头默认，上箭头为升序，下箭头为降序。</br>整体界面测试</br>整体界面是指整个Web应用系统的页面结构设计，是给用户的一个整体感。</br>1、当用户浏览Web应用系统时是否感到舒适（带有主观性）</br>2、是否凭直觉就知道要找的信息在什么地方？</br>3、整个Web应用系统的设计风格是否一致？</br>
</p>
              <p class="autor"><span class="lm f_l"><a href="/">MyBlog</a></span><span class="dtime f_l">2014-02-19</span>
              <span class="pingl f_r">评论（<a href="/">30</a>）</span></p>
            </ul>
          </div>
          
          
        </div>
      </div>
    </div> 


</div>
<br/><br/><br/>
</body>
</html>
